Настройка проекта:
1. В файле config.py укажите пароль, порт и другие параметры для postgres.
2. Также измените пути, если хотите, но удостоверьтесь, что нужные папки существуют.
3. Запустите файл \table\init\db_init_use.py, чтобы создать нужные таблицы.
4. Создайте в корневом каталоге файл .env, если его нет и поместите туда токен бота в телеграме в формате TOKEN=123
5. Для запуска бота запустите файл bot.py
6. Для отключения бота прервите исполнение файла bot.py или сделайте так, чтобы символ 1 был единственным содержимым файла \telegram\checker\check.txt
7. Чтобы назначить свой или любой другой аккаунт админом, перейдите в файл \_test_table.py и выполните метод put_admin(pgsdata, 123) где 123 телеграм id нужного пользователя

Как использовать бота.
1. Зайдите в своего бота в телеграме, пройдите регистрацию. 
Вы можете указать данные (фото, координаты, описание, выходные дни) своей конюшни.
2. Как админу вам доступны Юзер-мод и Админ-мод. 
Юзер-мод это функционал, доступный каждому зарегестрированному пользователю. 
Админ-мод доступен только админам.
3. В юзер-моде можно запросить поездку или изменить собственную анкету.
Когда пользователь запрашивает поездку, админ получает уведомление и может найти заявку в разделе заявок.
Админ видит описание и фото пользователя, его контакты и имя. Также возможно описание для конкретноей поездки.
Предполагается, что админ свяжется с пользователем, определит дату и время поездки, и подтвердит поездку на нужное время.
4. Пользователь может изменить дату и описание для пока не отвеченной поездки.
Если поездка была утверждена, менять ее может только админ. Однако пользователь может отменить поездку.
Админ получит уведомление об отмене.
Пользователь может иметь одновременно не более 5 запланированных поездок. Отмененная пользователем поездка влияет на это.
То есть если пользователь запланирует поездку, админ ее подтвердит а пользователь - отменит, он сможет сделать не более 4 заявок до момента поездки.
5. Пользователь получает уведомление за 1 час до поездки.
6. По необходимости пользователя можно заблокировать - при просмотре заявки есть желтая кнопка, позволяющая заблокировать пользователя.
Тогда пользователь больше не сможет использовать сервис.